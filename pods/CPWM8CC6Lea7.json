{
  "id": "CPWM8CC6Lea7",
  "parentId": "CPQU4nPmdVqN",
  "index": 10,
  "content": "\"(define-syntax (make-circuit stx)\\n  (syntax-parse stx\\n    [(_ (~alt\\n         (~optional (~seq #:external-pins (ext-pin ...))\\n                    ;; FIXME probably default to 2 external pins?\\n                    #:defaults ([(ext-pin 1) null]))\\n         (~optional (~seq #:layout p-name))\\n         (~optional (~seq #:where where-clause)\\n                    #:defaults ([where-clause #'()]))\\n         (~seq #:vars (var-clause ...))\\n         (~seq #:connect connect-clause)) ...)\\n     #`(let ([self-obj (create-simple-Composite ext-pin ...)])\\n         (syntax-parameterize ([self (make-rename-transformer #'self-obj)])\\n           (match-let* (var-clause ... ...)\\n             #,(if (attribute p-name)\\n                   #'(set-Composite-pict! self-obj (maybe-atom->pict p-name))\\n                   #'(void))\\n             ;; do the connections\\n             (set-Composite-nets!\\n              self-obj\\n              (apply append (map Composite-nets\\n                                 (flatten (list connect-clause ...)))))\\n             self-obj)))]))\"",
  "column": 1,
  "fold": false,
  "thundar": false,
  "utility": false,
  "name": "",
  "lang": "racket",
  "type": "CODE",
  "result": "\"\"",
  "stdout": "",
  "error": "null",
  "imports": "{}",
  "exports": "{}",
  "midports": "{}",
  "repoId": "102c7cad-cc6a-4ac2-b30c-d5e168c069bf"
}