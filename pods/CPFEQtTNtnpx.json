{
  "id": "CPFEQtTNtnpx",
  "parentId": "CPQU4nPmdVqN",
  "index": 14,
  "content": "\" (define (parse-maybe-dot stx)\\n   \\\"Return lhs rhs if there is a dot, else, return itself and (void)\\\"\\n   (let ([s (symbol->string (syntax-e stx))])\\n     (cond\\n      [(string-contains? s \\\".\\\") (match-let ([(list l r) (string-split s \\\".\\\")])\\n                                  (let ([l (string->symbol l)]\\n                                        [r (or (string->number r) (string->symbol r))])\\n                                    (datum->syntax\\n                                     stx (list 'pin-ref l (list 'quote r)))))]\\n      [else stx])))\\n (parse-maybe-dot #'ab)\\n (parse-maybe-dot #'ab.cd))\"",
  "column": 1,
  "fold": false,
  "thundar": false,
  "utility": false,
  "name": "",
  "lang": "racket",
  "type": "CODE",
  "result": "\"\"",
  "stdout": "",
  "error": "null",
  "imports": "{}",
  "exports": "{}",
  "midports": "{}",
  "repoId": "102c7cad-cc6a-4ac2-b30c-d5e168c069bf"
}